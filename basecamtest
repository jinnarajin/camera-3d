import numpy as np

def estimate_rigid_transform(cam_pts, base_pts):
    """
    cam_pts, base_pts: shape (N,3), N>=3
    반환: R(3x3), t(3,), T(4x4) with p_base = R @ p_cam + t
    """
    cam = np.asarray(cam_pts, dtype=float)
    base = np.asarray(base_pts, dtype=float)
    assert cam.shape == base.shape and cam.shape[1] == 3 and cam.shape[0] >= 3

    c_cam = cam.mean(axis=0)
    c_base = base.mean(axis=0)

    X = cam - c_cam
    Y = base - c_base

    H = X.T @ Y
    U, S, Vt = np.linalg.svd(H)
    R = Vt.T @ U.T
    # reflection 처리
    if np.linalg.det(R) < 0:
        Vt[-1, :] *= -1
        R = Vt.T @ U.T

    t = c_base - R @ c_cam

    T = np.eye(4)
    T[:3, :3] = R
    T[:3, 3] = t
    return R, t, T

# 예시: CSV 로드 후 사용
# cam_pts = np.loadtxt("cam_points.csv", delimiter=",")    # Nx3
# base_pts = np.loadtxt("base_points.csv", delimiter=",")  # Nx3
# R, t, T = estimate_rigid_transform(cam_pts, base_pts)
# print(T)
